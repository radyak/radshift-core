version: '3.4'

services:

  core:
    depends_on:
      - mongodb
    container_name: core
    image: radyak/radshift-core:x86-latest
    build:
      context: .
      args:
        - BASE_IMAGE=node:lts-alpine
    ports:
      - 80:80
      - 443:443
      - 3000:3000
    volumes:
      - "/home/fvo/tmp/test-mounts:/usr/src/conf"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - PORT=3000
      - CONF_DIR=/usr/src/conf
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DATABASE=core
      - ACTIVE_CONTEXT_PROFILES=dev, dev-cluster
      - RADHUB_URL=http://radhub:4010
    networks:
      - www
      - internal

  testapp:
    container_name: testapp
    image: radyak/radshift-testapp:x86-latest
    environment:
      - PORT=3210
    ports:
      - 3210:3210
    networks:
      - internal
    
  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - 27017:27017
    networks:
      - internal

  radhub:
    container_name: radhub
    image: radyak/radhub:x86-latest
    environment:
      - PORT=4010
      - BACKENDS_FILE=/usr/src/radhub/radhub-backends.json
    volumes:
      - "/home/fvo/tmp/test-mounts:/usr/src/radhub"
    ports:
      - 4010:4010
    networks:
      - www
      - internal

  radshift-stream-downloader:
    container_name: radshift-stream-downloader
    image: rpi-workstation:5000/radshift-stream-downloader:x86-latest
    environment:
      - PORT=3009
    volumes:
      - "/home/fvo/tmp/test-mounts:/usr/src/app/output"
    ports:
      - 3009:3009
    networks:
      - www
      - internal

  # mongoclient:
  #   container_name: mongoclient
  #   image: mongoclient/mongoclient
  #   ports:
  #     - 3000:3000
  #   network_mode: host

  # portainer:
  #   container_name: portainer
  #   image: portainer/portainer
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"

networks:

  www:
    driver: bridge

  internal:
    driver: bridge
    internal: true